{"version":3,"sources":["components/BrutaNet.js","components/Status.js","components/Settings.js","index.js"],"names":["BrutVersNet","_this","this","Object","keys","props","salaire","map","key","index","react_default","a","createElement","className","for","name","id","value","Math","round","brut","onChange","setBrut","net","setNet","Component","Status","choixStatus","status","type","defaultChecked","evnt","setStatus","target","Settings","workHour","list","e","setWorkHour","label","options","moisPrimeOpt","tauxPrelevement","setTauxPrelevement","mensuel","annuel","rootElement","document","getElementById","ReactDOM","render","hbrut","hnet","_useState","useState","_useState2","slicedToArray","donnéesEntrée","contrat salarié . rémunération . brut de base","contrat salarié . statut cadre","impôt . méthode de calcul","Lib","evaluate","horaire","_useState3","_useState4","valstatus","salarié","salarié cadre","fonction public","indépendant","portage salarial","12 mois","13 mois","14 mois","15 mois","16 mois","_useState5","_useState6","_useState7","_useState8","BrutaNet","components_Status","components_Settings"],"mappings":"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","file":"static/js/main.84e03a5d.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nclass BrutVersNet extends Component {\r\n\trender () {\r\n\t\t\r\n\t\treturn Object.keys( this.props.salaire ).map((key,index)=>(\r\n\t\t\t\t<div className=\"ligne\">\r\n\t\t\t\t\t<div className = \"input-salaire brut\">\r\n\t\t\t\t\t\t<label for = {key+\"-brut\"}><span>{key} brut</span></label>\r\n\t\t\t\t\t\t<input name={key+\"-brut\"} id={key+\"-brut\"} value = {Math.round(this.props.salaire[key].brut)} onChange = {this.props.salaire[key].setBrut} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = \"input-salaire net\">\r\n\t\t\t\t\t\t<label for = { key + \"-net\"}><span>{key} net</span></label>\r\n\t\t\t\t\t\t<input name={ key + \"-net\"} id={ key + \"-net\"} value = {this.props.salaire[key].net } onChange = {this.props.salaire[key].setNet} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t));\r\n\t}\r\n}\r\n\r\nexport default BrutVersNet;","import React, {Component} from \"react\";\r\n\r\nclass Status extends Component {\r\n\t/* Composant pour le choix du statut*/\r\n\trender() {\r\n\t\treturn <div className=\"choix-status-container\">\r\n\t\t\t{this.props.choixStatus.map( (status) => (\r\n\t\t\t\t<div className=\"choix-status-input\">\r\n\t\t\t\t\t<label className = \"container\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"status\" \r\n\t\t\t\t\t\t\tname=\"status\" type=\"radio\"\r\n\t\t\t\t\t\t\tvalue={status}\r\n\t\t\t\t\t\t\tdefaultChecked={ (status=='salarié')}\r\n\t\t\t\t\t\t\tonChange ={ (evnt)=> ( this.props.setStatus(evnt.target.value) )} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className=\"checkmark\"></span>\r\n\t\t\t\t\t\t<span>{status}</span>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\nexport default Status;","import React, {Component} from \"react\";\r\n\r\nclass Settings extends Component {\r\n  \r\n  \r\n\trender(){\r\n\t\treturn(\r\n    <div> \r\n      <div className=\"options-input\">\r\n        <label> Temp de travail {this.props.workHour} %</label>\r\n\t\t\t\t<input id=\"heure-travail\" type=\"range\"  list=\"tickmarks\" value={this.props.workHour} onChange = {(e)=> ( this.props.setWorkHour (e.target.value) )} />\r\n          <datalist id=\"tickmarks\">\r\n            <option value=\"0\" label=\"0%\"></option>\r\n            <option value=\"10\"></option>\r\n            <option value=\"20\"></option>\r\n            <option value=\"30\"></option>\r\n            <option value=\"40\"></option>\r\n            <option value=\"50\" label=\"50%\"></option>\r\n            <option value=\"60\"></option>\r\n            <option value=\"70\"></option>\r\n            <option value=\"80\"></option>\r\n            <option value=\"90\"></option>\r\n            <option value=\"100\" label=\"100%\"></option>\r\n          </datalist>\r\n\t\t\t</div>\r\n      <div className =\"choix-nbmois-prime-container\">\r\n        { Object.keys(this.props.options.moisPrimeOpt).map( function (key , index)  {\r\n            let value = this.props.options.moisPrimeOpt[key] ;\r\n            return (\r\n            <div className=\"choix-status-input\">\r\n              <label className = \"container\">\r\n\t\t\t\t\t\t    <input className=\"status\" name=\"nbmois-prime\" type=\"radio\"  value={value} />\r\n\t\t\t\t\t\t    <span className=\"checkmark\"></span>\r\n\t\t\t\t\t\t    <span>{key}</span>\r\n\t\t\t\t\t    </label> \r\n            </div>);\r\n        } , this)}\r\n       \r\n      </div>\r\n      <div className=\"options-input\">\r\n        <label for=\"taux-prelevement\"> Taux de prelevement a la source {this.props.tauxPrelevement} %</label>\r\n        <input name=\"taux-prelevement\" id=\"taux-prelevement\" type=\"range\" value={this.props.tauxPrelevement} onChange={ (e) => ( this.props.setTauxPrelevement(e.target.value))}/>\r\n      </div>\r\n      <div className =\"estimation-salaire\">  \r\n        <div className= \"ligne\">\r\n          <div className = \"input-salaire estimation-mensuel\">\r\n            <label >Mensuel net apres impôts</label>\r\n            <input type=\"text\" value={this.props.salaire.mensuel.net} onChange={this.props.salaire.mensuel.setNet} />\r\n          </div>\r\n          <div className = \"input-salaire estimation-annuel\">\r\n            <label >Annuel net apres impôts</label>\r\n            <input type=\"text\" value={this.props.salaire.annuel.net} onChange={this.props.salaire.annuel.setNet} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>);\r\n\t}\r\n}\r\n\r\nexport default Settings;\r\n","import React, { useState } from \"react\";\r\nimport Lib from \"mon-entreprise\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './style.css';\r\nimport BrutVersNet from \"./components/BrutaNet\";\r\nimport Status from \"./components/Status\" ;\r\nimport Settings from \"./components/Settings\";\r\n\r\n\r\nfunction App() {\r\n\r\n  let [brut, setBrut] = useState(\"\");  \r\n\r\n  let hbrut, hnet, annuelbrut, annuelnet;\r\n\r\n  hbrut=0;\r\n  let donnéesEntrée = {\r\n    \"contrat salarié . rémunération . brut de base\": brut,\r\n    \"contrat salarié . statut cadre\" : status,\r\n    \"impôt . méthode de calcul\" : \"barème standard\"\r\n  };\r\n\r\n\r\n  /*let netimpot = Lib.evaluate(\"contrat salarié . rémunération . net après impôt\" , donnéesEntrée);\r\n  let smic = Lib.evaluate(\"contrat salarié . SMIC\");*/\r\n\r\n  var net = Math.round(Lib.evaluate(\"contrat salarié . rémunération . net après impôt\", donnéesEntrée));\r\n  /*let setNet = function (value ) {\r\n    net = value*-1;\r\n    let newBrut = Math.round(Lib.evaluate(\"contrat salarié . rémunération . brut de base . équivalent temps plein\", datacalcul)));\r\n    setBrut( newBrut);\r\n  }*/\r\n  let salaire = {\r\n    \"horaire\" : { \"brut\" : hbrut  , \"net\" : hnet ,\r\n      \"setBrut\" : (e) => ( hbrut = Math.round(e.target.value) ),\r\n      \"setNet\"  : (e) => ( hnet  = Math.round(e.target.value) )\r\n    },\r\n    \"mensuel\" : {\"brut\" : brut  , \"net\" : net  ,\r\n      \"setBrut\" : (e) => ( setBrut(Math.round(e.target.value)) ),\r\n      //\"setNet\"  : (e) => ( setNet(e.target.value) ) \r\n    },\r\n    \"annuel\"  : {\"brut\" : brut*12  , \"net\" : net*12 ,\r\n      \"setBrut\" : (e) => ( setBrut( e.target.value/12 )),\r\n      \"setNet\"  : (e) => ( net =e.target.value/12 )\r\n    }\r\n  };\r\n\r\n  /* Variable lié au status */\r\n  let [status , setStatus] = useState(\"salarié\");\r\n  let choixStatus = [\"salarié\" , \"salarié cadre\" ,\"fonction public\", \"indépendant\" , \"portage salarial\"];\r\n  let mapStatus = {'salarié':'Non-cadre'  , \"salarié cadre\":\"Cadre\" , \"fonction public\" : \"Public\" , \"indépendant\" : \"Indé\" , \"portage salarial\":\"Port\"};\r\n  let valstatus = mapStatus[status];\r\n\r\n  /**/\r\n  let options = new Object({});\r\n  let heure_de_travail, set_heure_de_travail = useState(\"\");\r\n  options[\"moisPrimeOpt\"] =  {\"12 mois\":12 , \"13 mois\" : 13 , \"14 mois\" : 14 , \"15 mois\" : 15 , \"16 mois\" : 16};\r\n  let [workHour , setWorkHour] = useState(100);\r\n  let [tauxPrelevement , setTauxPrelevement] = useState(0);\r\n\r\n\r\n  /* Modification de la formule de calcule selon l'entrée de l'utilisateur */\r\n\r\n\r\n  return (\r\n  <div className=\"App\">\r\n    <div className = \"entree-salaire\">\r\n      <span id=\"status-travailleur\">{valstatus}</span>\r\n\r\n      <BrutVersNet salaire = {salaire} setBrut ={setBrut}/>\r\n      <Status choixStatus = {choixStatus} setStatus={setStatus} />\r\n    </div>\r\n    <div className = \"options\">\r\n      <Settings salaire= {salaire} options={options} workHour={workHour} setWorkHour = {setWorkHour} tauxPrelevement = {tauxPrelevement} setTauxPrelevement={setTauxPrelevement}/>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}