{"version":3,"sources":["components/BrutaNet.js","components/Status.js","components/Settings.js","index.js"],"names":["BrutVersNet","Component","render","Object","keys","this","props","salaire","map","key","index","react_default","a","createElement","className","for","name","id","value","Math","round","brut","onChange","setBrut","net","setNet","Status","choixStatus","status","type","defaultChecked","evnt","setStatus","target","Settings","workHour","list","e","setWorkHour","label","options","moisPrimeOpt","tauxPrelevement","setTauxPrelevement","mensuel","annuel","rootElement","document","getElementById","ReactDOM","hbrut","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","hnet","donnéesEntrée","contrat salarié . rémunération . brut de base","contrat salarié . statut cadre","impôt . méthode de calcul","Lib","evaluate","horaire","valstatus","salarié","salarié cadre","fonction public","indépendant","portage salarial","12 mois","13 mois","14 mois","15 mois","16 mois","_useState5","_useState6","_useState7","_useState8","BrutaNet","components_Status","components_Settings"],"mappings":"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","file":"static/js/main.e9de82a4.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nclass BrutVersNet extends Component {\n\trender () {\n\t\t\n\t\treturn Object.keys( this.props.salaire ).map((key,index)=>(\n\t\t\t\t<div className=\"ligne\">\n\t\t\t\t\t<div className = \"input-salaire brut\">\n\t\t\t\t\t\t<label for = {key+\"-brut\"}><span>{key} brut</span></label>\n\t\t\t\t\t\t<input name={key+\"-brut\"} id={key+\"-brut\"} value = {Math.round(this.props.salaire[key].brut)} onChange = {this.props.salaire[key].setBrut} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className = \"input-salaire net\">\n\t\t\t\t\t\t<label for = { key + \"-net\"}><span>{key} net</span></label>\n\t\t\t\t\t\t<input name={ key + \"-net\"} id={ key + \"-net\"} value = {this.props.salaire[key].net } onChange = {this.props.salaire[key].setNet} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t));\n\t}\n}\n\nexport default BrutVersNet;","import React, {Component} from \"react\";\n\nclass Status extends Component {\n\t/* Composant pour le choix du statut*/\n\trender() {\n\t\treturn <div className=\"choix-status-container\">\n\t\t\t{this.props.choixStatus.map( (status) => (\n\t\t\t\t<div className=\"choix-status-input\">\n\t\t\t\t\t<label className = \"container\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"status\" \n\t\t\t\t\t\t\tname=\"status\" type=\"radio\"\n\t\t\t\t\t\t\tvalue={status}\n\t\t\t\t\t\t\tdefaultChecked={ (status=='salarié')}\n\t\t\t\t\t\t\tonChange ={ (evnt)=> ( this.props.setStatus(evnt.target.value) )} \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"checkmark\"></span>\n\t\t\t\t\t\t<span>{status}</span>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>;\n\t}\n}\n\nexport default Status;","import React, {Component} from \"react\";\n\nclass Settings extends Component {\n  \n  \n\trender(){\n\t\treturn(\n    <div> \n      <div className=\"options-input\">\n        <label> Temp de travail {this.props.workHour} %</label>\n\t\t\t\t<input id=\"heure-travail\" type=\"range\"  list=\"tickmarks\" value={this.props.workHour} onChange = {(e)=> ( this.props.setWorkHour (e.target.value) )} />\n          <datalist id=\"tickmarks\">\n            <option value=\"0\" label=\"0%\"></option>\n            <option value=\"10\"></option>\n            <option value=\"20\"></option>\n            <option value=\"30\"></option>\n            <option value=\"40\"></option>\n            <option value=\"50\" label=\"50%\"></option>\n            <option value=\"60\"></option>\n            <option value=\"70\"></option>\n            <option value=\"80\"></option>\n            <option value=\"90\"></option>\n            <option value=\"100\" label=\"100%\"></option>\n          </datalist>\n\t\t\t</div>\n      <div className =\"choix-nbmois-prime-container\">\n        { Object.keys(this.props.options.moisPrimeOpt).map( function (key , index)  {\n            let value = this.props.options.moisPrimeOpt[key] ;\n            return (\n            <div className=\"choix-status-input\">\n              <label className = \"container\">\n\t\t\t\t\t\t    <input className=\"status\" name=\"nbmois-prime\" type=\"radio\"  value={value} />\n\t\t\t\t\t\t    <span className=\"checkmark\"></span>\n\t\t\t\t\t\t    <span>{key}</span>\n\t\t\t\t\t    </label> \n            </div>);\n        } , this)}\n       \n      </div>\n      <div className=\"options-input\">\n        <label for=\"taux-prelevement\"> Taux de prelevement a la source {this.props.tauxPrelevement} %</label>\n        <input name=\"taux-prelevement\" id=\"taux-prelevement\" type=\"range\" value={this.props.tauxPrelevement} onChange={ (e) => ( this.props.setTauxPrelevement(e.target.value))}/>\n      </div>\n      <div className =\"estimation-salaire\">  \n        <div className= \"ligne\">\n          <div className = \"input-salaire estimation-mensuel\">\n            <label >Mensuel net apres impôts</label>\n            <input type=\"text\" value={this.props.salaire.mensuel.net} onChange={this.props.salaire.mensuel.setNet} />\n          </div>\n          <div className = \"input-salaire estimation-annuel\">\n            <label >Annuel net apres impôts</label>\n            <input type=\"text\" value={this.props.salaire.annuel.net} onChange={this.props.salaire.annuel.setNet} />\n          </div>\n        </div>\n      </div>\n    </div>);\n\t}\n}\n\nexport default Settings;\n","import React, { useState } from \"react\";\nimport Lib from \"mon-entreprise\";\nimport ReactDOM from \"react-dom\";\nimport './style.css';\nimport BrutVersNet from \"./components/BrutaNet\";\nimport Status from \"./components/Status\" ;\nimport Settings from \"./components/Settings\";\n\n\nfunction App() {\n\n  let [brut, setBrut] = useState(\"\");  \n  let [status , setStatus] = useState(\"salarié\");\n  let hbrut, hnet = 0 ;\n\n  hbrut=0;\n\n  let donnéesEntrée = {\n    \"contrat salarié . rémunération . brut de base\": brut,\n    \"contrat salarié . statut cadre\" : status,\n    \"impôt . méthode de calcul\" : \"barème standard\"\n  };\n\n\n  /*let netimpot = Lib.evaluate(\"contrat salarié . rémunération . net après impôt\" , donnéesEntrée);\n  let smic = Lib.evaluate(\"contrat salarié . SMIC\");*/\n\n  var net = Math.round(Lib.evaluate(\"contrat salarié . rémunération . net après impôt\", donnéesEntrée));\n  /*let setNet = function (value ) {\n    net = value*-1;\n    let newBrut = Math.round(Lib.evaluate(\"contrat salarié . rémunération . brut de base . équivalent temps plein\", datacalcul)));\n    setBrut( newBrut);\n  }*/\n  let salaire = {\n    \"horaire\" : { \"brut\" : hbrut  , \"net\" : hnet ,\n      \"setBrut\" : (e) => ( hbrut = Math.round(e.target.value) ),\n      \"setNet\"  : (e) => ( hnet  = Math.round(e.target.value) )\n    },\n    \"mensuel\" : {\"brut\" : brut  , \"net\" : net  ,\n      \"setBrut\" : (e) => ( setBrut(Math.round(e.target.value)) ),\n      //\"setNet\"  : (e) => ( setNet(e.target.value) ) \n    },\n    \"annuel\"  : {\"brut\" : brut*12  , \"net\" : net*12 ,\n      \"setBrut\" : (e) => ( setBrut( e.target.value/12 )),\n      \"setNet\"  : (e) => ( net =e.target.value/12 )\n    }\n  };\n\n  /* Variable lié au status */\n  \n  let choixStatus = [\"salarié\" , \"salarié cadre\" ,\"fonction public\", \"indépendant\" , \"portage salarial\"];\n  let mapStatus = {'salarié':'Non-cadre'  , \"salarié cadre\":\"Cadre\" , \"fonction public\" : \"Public\" , \"indépendant\" : \"Indé\" , \"portage salarial\":\"Port\"};\n  let valstatus = mapStatus[status];\n\n  /**/\n  let options = new Object({});\n  let heure_de_travail, set_heure_de_travail = useState(\"\");\n  options[\"moisPrimeOpt\"] =  {\"12 mois\":12 , \"13 mois\" : 13 , \"14 mois\" : 14 , \"15 mois\" : 15 , \"16 mois\" : 16};\n  let [workHour , setWorkHour] = useState(100);\n  let [tauxPrelevement , setTauxPrelevement] = useState(0);\n\n\n  /* Modification de la formule de calcule selon l'entrée de l'utilisateur */\n\n\n  return (\n  <div className=\"App\">\n    <div className = \"entree-salaire\">\n      <span id=\"status-travailleur\">{valstatus}</span>\n\n      <BrutVersNet salaire = {salaire} setBrut ={setBrut}/>\n      <Status choixStatus = {choixStatus} setStatus={setStatus} />\n    </div>\n    <div className = \"options\">\n      <Settings salaire= {salaire} options={options} workHour={workHour} setWorkHour = {setWorkHour} tauxPrelevement = {tauxPrelevement} setTauxPrelevement={setTauxPrelevement}/>\n    </div>\n  </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}